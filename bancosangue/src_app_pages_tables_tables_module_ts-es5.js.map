{"version":3,"mappings":"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","names":["SmartTableComponent","service","add","addButtonContent","createButtonContent","cancelButtonContent","edit","editButtonContent","saveButtonContent","deleteButtonContent","confirmDelete","columns","id","title","type","firstName","lastName","username","email","age","ng2_smart_table__WEBPACK_IMPORTED_MODULE_1__","data","getData","source","load","event","window","confirm","resolve","reject","_angular_core__WEBPACK_IMPORTED_MODULE_2__","selectors","decls","vars","consts","template","ctx","routes","path","component","_tables_component__WEBPACK_IMPORTED_MODULE_0__","children","_smart_table_smart_table_component__WEBPACK_IMPORTED_MODULE_1__","_tree_grid_tree_grid_component__WEBPACK_IMPORTED_MODULE_2__","TablesRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_4__","imports","exports","routedComponents","TablesComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","TablesModule","_nebular_theme__WEBPACK_IMPORTED_MODULE_6__","_theme_theme_module__WEBPACK_IMPORTED_MODULE_0__","_tables_routing_module__WEBPACK_IMPORTED_MODULE_1__","ng2_smart_table__WEBPACK_IMPORTED_MODULE_7__","declarations","row_r6","ctx_r4","TreeGridComponent","dataSourceBuilder","customColumn","defaultColumns","_nebular_theme__WEBPACK_IMPORTED_MODULE_1__","name","size","items","kind","dataSource","create","sortRequest","sortColumn","column","sortDirection","direction","index","minWithForMultipleColumns","nextColumnStep","FsIconComponent","styles","inputs","expanded","_r1"],"sources":["webpack:///src/app/pages/tables/smart-table/smart-table.component.ts","webpack:///src/app/pages/tables/smart-table/smart-table.component.html","webpack:///src/app/pages/tables/tables-routing.module.ts","webpack:///src/app/pages/tables/tables.component.ts","webpack:///src/app/pages/tables/tables.module.ts","webpack:///src/app/pages/tables/tree-grid/tree-grid.component.html","webpack:///src/app/pages/tables/tree-grid/tree-grid.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\n\r\nimport { SmartTableData } from '../../../@core/data/smart-table';\r\n\r\n@Component({\r\n  selector: 'ngx-smart-table',\r\n  templateUrl: './smart-table.component.html',\r\n  styleUrls: ['./smart-table.component.scss'],\r\n})\r\nexport class SmartTableComponent {\r\n\r\n  settings = {\r\n    add: {\r\n      addButtonContent: '<i class=\"nb-plus\"></i>',\r\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    edit: {\r\n      editButtonContent: '<i class=\"nb-edit\"></i>',\r\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n    columns: {\r\n      id: {\r\n        title: 'ID',\r\n        type: 'number',\r\n      },\r\n      firstName: {\r\n        title: 'First Name',\r\n        type: 'string',\r\n      },\r\n      lastName: {\r\n        title: 'Last Name',\r\n        type: 'string',\r\n      },\r\n      username: {\r\n        title: 'Username',\r\n        type: 'string',\r\n      },\r\n      email: {\r\n        title: 'E-mail',\r\n        type: 'string',\r\n      },\r\n      age: {\r\n        title: 'Age',\r\n        type: 'number',\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private service: SmartTableData) {\r\n    const data = this.service.getData();\r\n    this.source.load(data);\r\n  }\r\n\r\n  onDeleteConfirm(event): void {\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      event.confirm.resolve();\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>\r\n    Smart Table\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TablesComponent } from './tables.component';\r\nimport { SmartTableComponent } from './smart-table/smart-table.component';\r\nimport { TreeGridComponent } from './tree-grid/tree-grid.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: TablesComponent,\r\n  children: [\r\n    {\r\n      path: 'smart-table',\r\n      component: SmartTableComponent,\r\n    },\r\n    {\r\n      path: 'tree-grid',\r\n      component: TreeGridComponent,\r\n    },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TablesRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n  TablesComponent,\r\n  SmartTableComponent,\r\n  TreeGridComponent,\r\n];\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-tables',\r\n  template: `<router-outlet></router-outlet>`,\r\n})\r\nexport class TablesComponent {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NbCardModule, NbIconModule, NbInputModule, NbTreeGridModule } from '@nebular/theme';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { TablesRoutingModule, routedComponents } from './tables-routing.module';\r\nimport { FsIconComponent } from './tree-grid/tree-grid.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NbCardModule,\r\n    NbTreeGridModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    ThemeModule,\r\n    TablesRoutingModule,\r\n    Ng2SmartTableModule,\r\n  ],\r\n  declarations: [\r\n    ...routedComponents,\r\n    FsIconComponent,\r\n  ],\r\n})\r\nexport class TablesModule { }\r\n","<nb-card>\r\n  <nb-card-body>\r\n\r\n    <label class=\"search-label\" for=\"search\">Search:</label>\r\n    <input nbInput [nbFilterInput]=\"dataSource\" id=\"search\" class=\"search-input\">\r\n\r\n    <table [nbTreeGrid]=\"dataSource\" [nbSort]=\"dataSource\" (sort)=\"updateSort($event)\">\r\n\r\n      <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\r\n      <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\r\n\r\n      <ng-container [nbTreeGridColumnDef]=\"customColumn\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(customColumn)\" *nbTreeGridHeaderCellDef>\r\n          {{customColumn}}\r\n        </th>\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\r\n          <ngx-fs-icon [kind]=\"row.data.kind\" [expanded]=\"row.expanded\"></ngx-fs-icon>\r\n          {{row.data[customColumn]}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container *ngFor=\"let column of defaultColumns; let index = index\"\r\n                    [nbTreeGridColumnDef]=\"column\"\r\n                    [showOn]=\"getShowOn(index)\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(column)\" *nbTreeGridHeaderCellDef>\r\n          {{column}}\r\n        </th>\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data[column] || '-'}}</td>\r\n      </ng-container>\r\n\r\n    </table>\r\n\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { Component, Input } from '@angular/core';\r\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\r\n\r\ninterface TreeNode<T> {\r\n  data: T;\r\n  children?: TreeNode<T>[];\r\n  expanded?: boolean;\r\n}\r\n\r\ninterface FSEntry {\r\n  name: string;\r\n  size: string;\r\n  kind: string;\r\n  items?: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-tree-grid',\r\n  templateUrl: './tree-grid.component.html',\r\n  styleUrls: ['./tree-grid.component.scss'],\r\n})\r\nexport class TreeGridComponent {\r\n  customColumn = 'name';\r\n  defaultColumns = [ 'size', 'kind', 'items' ];\r\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\r\n\r\n  dataSource: NbTreeGridDataSource<FSEntry>;\r\n\r\n  sortColumn: string;\r\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\r\n\r\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>) {\r\n    this.dataSource = this.dataSourceBuilder.create(this.data);\r\n  }\r\n\r\n  updateSort(sortRequest: NbSortRequest): void {\r\n    this.sortColumn = sortRequest.column;\r\n    this.sortDirection = sortRequest.direction;\r\n  }\r\n\r\n  getSortDirection(column: string): NbSortDirection {\r\n    if (this.sortColumn === column) {\r\n      return this.sortDirection;\r\n    }\r\n    return NbSortDirection.NONE;\r\n  }\r\n\r\n  private data: TreeNode<FSEntry>[] = [\r\n    {\r\n      data: { name: 'Projects', size: '1.8 MB', items: 5, kind: 'dir' },\r\n      children: [\r\n        { data: { name: 'project-1.doc', kind: 'doc', size: '240 KB' } },\r\n        { data: { name: 'project-2.doc', kind: 'doc', size: '290 KB' } },\r\n        { data: { name: 'project-3', kind: 'txt', size: '466 KB' } },\r\n        { data: { name: 'project-4.docx', kind: 'docx', size: '900 KB' } },\r\n      ],\r\n    },\r\n    {\r\n      data: { name: 'Reports', kind: 'dir', size: '400 KB', items: 2 },\r\n      children: [\r\n        { data: { name: 'Report 1', kind: 'doc', size: '100 KB' } },\r\n        { data: { name: 'Report 2', kind: 'doc', size: '300 KB' } },\r\n      ],\r\n    },\r\n    {\r\n      data: { name: 'Other', kind: 'dir', size: '109 MB', items: 2 },\r\n      children: [\r\n        { data: { name: 'backup.bkp', kind: 'bkp', size: '107 MB' } },\r\n        { data: { name: 'secret-note.txt', kind: 'txt', size: '2 MB' } },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  getShowOn(index: number) {\r\n    const minWithForMultipleColumns = 400;\r\n    const nextColumnStep = 100;\r\n    return minWithForMultipleColumns + (nextColumnStep * index);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-fs-icon',\r\n  template: `\r\n    <nb-tree-grid-row-toggle [expanded]=\"expanded\" *ngIf=\"isDir(); else fileIcon\">\r\n    </nb-tree-grid-row-toggle>\r\n    <ng-template #fileIcon>\r\n      <nb-icon icon=\"file-text-outline\"></nb-icon>\r\n    </ng-template>\r\n  `,\r\n})\r\nexport class FsIconComponent {\r\n  @Input() kind: string;\r\n  @Input() expanded: boolean;\r\n\r\n  isDir(): boolean {\r\n    return this.kind === 'dir';\r\n  }\r\n}\r\n"]}